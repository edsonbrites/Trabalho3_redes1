################################################################################
Primeiro commit:

$mkdir Trabalho3_redes1
$cd Trabalho3_redes1/
$git init
$touch README
$git add README
$git commit -m 'first commit'
$git remote add origin git@github.com:lipecys/Trabalho3_redes1.git
$git push -u origin master
################################################################################

################################################################################
Para os próximos commits:
Clonando o repositório para poder trabalhar nele:
$git clone git@github.com:lipecys/Trabalho3_redes1
$cd Trabalho3_redes1/

Aqui fazemos o commit do arquivo "fazer_um_commit":
$git add fazer_um_commit
$git commit -m 'Como fazer um commit'
(ou executa um "git commit -a" que abre um editor para escrever a mensagem e
comentários)
$git push -u origin master

Quando deletamos um arquivo:
$git add .
$git commit -m 'deletando arquivos'
$git push -u origin master
################################################################################

################################################################################
Fui dar um git push, o arquivo que alterei já tinha sido alterado e commitado
por outra pessoa. Deu erro de merge, e agora?
Quando isso acontece, o processo (pelo menos o que encontrei) é meio chato.
Primeiro fazemos um clone em outro diretório, daí fazemos um merge manual desses
dois arquivos e então copiamos para o diretório onde estávamos trabalhando. E só
aí fazemos o git add, o git commit e então o git push.
################################################################################

################################################################################
Desfazendo cagadas
Temos um arquivo.
Fazemos uma modificação nesse arquivo.
Vemos que isso ficou pior que a versão que está no repositório.
Então faz um novo clone em outro lugar, copia o arquivo antigo para a versão que
estamos trabalhando e trabalha a partir daí.
################################################################################

???????????????????????????????????????????????????????????????????????????????
??? Tem alguma forma de voltar para o estado anterior do repositório depois ???
??? de fazer um push com arquivos bichados                                  ???
???????????????????????????????????????????????????????????????????????????????




De acordo com o "github" quando criamos um repositório novo:
Global setup:
 Download and install Git
  git config --global user.name "Your Name"
  git config --global user.email lipecys@gmail.com
        

Next steps:
  mkdir Sistemas-Operacionais
  cd Sistemas-Operacionais
  git init
  touch README
  git add README
  git commit -m 'first commit'
  git remote add origin git@github.com:lipecys/Sistemas-Operacionais.git
  git push -u origin master
      

Existing Git Repo?
  cd existing_git_repo
  git remote add origin git@github.com:lipecys/Sistemas-Operacionais.git
  git push -u origin master
